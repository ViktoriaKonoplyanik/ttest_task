import random
import time


def can_jump(nums):
    """
    Функция проверяет, можно ли добраться до последнего элемента списка,
    прыгая с каждой позиции на количество позиций, не превышающее значения в текущем элементе списка.

    Args:
    nums (list): Список чисел, где каждое число определяет максимальную длину прыжка с соответствующей позиции.

    Return:
    bool: True, если возможно добраться до конца списка, иначе False.
    """
    max_reach = 0  # Изначально максимальная достижимая позиция равна 0

    print("Добро пожаловать в игру! Ты на старте и пытаешься добраться до конца списка!")
    print("Твоя задача - добраться до конца списка."
          "С каждой позиции ты можешь прыгать на количество позиций, "
          "не превышающее значение в текущем элементе списка nums[i].\n")

    # Проходим по всем элементам списка, используя enumerate для получения индекса и значения.
    for i, jump in enumerate(nums):
        print(f"\nТы на позиции {i}. Доступный прыжок: {jump}")
        # Если текущий индекс больше максимальной достижимой позиции, значит, мы не можем двигаться дальше
        if i > max_reach:
            print("Упс! Ты не можешь дальше прыгать, не добравшись до этой позиции!")
            return False

        # Обновляем максимальную достижимую позицию
        max_reach = max(max_reach, i + jump)
        print(f"Максимальное достижимое расстояние: {max_reach}")

        # Если максимальная достижимая позиция больше или равна последнему индексу, игра завершена успешно
        if max_reach >= len(nums) - 1:
            print("Поздравляем! Ты дошел до конца списка!")
            return True

        time.sleep(1)

    # Если мы не достигли конца списка, выводим сообщение
    print("Ты не смог добраться до конца.")
    return False


def start_game():
    """
    Функция запускает игру, предлагая пользователю выбрать способ создания списка: случайный, ввод с клавиатуры или
    выбор из примеров.

    """
    nums = []
    while True:
        choice = input("Хочешь сгенерировать случайный список? (да/нет): ").strip().lower()

        if choice == "да":
            nums = [random.randint(1, 5) for _ in range(random.randint(5, 10))]  # создаем рандомный список
            print(f"\nСгенерированный список прыжков: {nums}")
            break
        elif choice == "нет":
            while True:
                sub_choice = input(
                    "\nХотите ввести свой список или выбрать из примеров? (ввести/выбрать): ").strip().lower()

                if sub_choice == "ввести":
                    # Пользователь вводит свой список
                    while True:
                        user_input = input("Введите числа списка через пробел, запятую или другой разделитель: ")

                        delimiters = [' ', ',', ';', ':']  # допустимые разделители строки
                        nums = None

                        # Пробуем разделить строку по каждому из разделителей
                        for delimiter in delimiters:
                            try:
                                nums = list(map(int, user_input.split(delimiter)))
                                if all(num >= 0 for num in nums):  # проверка на отрицательные числа
                                    break
                                else:
                                    print("Ошибка: числа должны быть положительными. Попробуйте снова.")
                                    nums = None
                            except ValueError:
                                continue  # если не удалось преобразовать, пробуем следующий разделитель

                        if nums is None:
                            print(
                                "Ошибка: введены нечисловые значения или некорректный формат."
                                "Пожалуйста, используйте пробел, запятую или точку с запятой для разделения чисел.")
                        else:
                            break
                    break
                elif sub_choice == "выбрать":
                    print("\nПримеры заранее заданных списков:")
                    example_1 = [2, 3, 1, 1, 4]
                    example_2 = [3, 2, 1, 0, 4]
                    print(f"Пример 1 (успешный): {example_1}")
                    print(f"Пример 2 (неудачный): {example_2}")
                    while True:
                        selected_example = input("Какой пример ты хочешь использовать? (1 или 2): ").strip()

                        if selected_example == "1":
                            nums = example_1
                            break
                        elif selected_example == "2":
                            nums = example_2
                            break
                        else:
                            print("Неверный выбор! Пожалуйста, выбери 1 или 2.")
                    break
                else:
                    print("Неверный выбор! Пожалуйста, выбери 'ввести' или 'выбрать'.")
                    continue
            break
        else:
            print("Неверный выбор! Пожалуйста, ответь 'да' или 'нет'.")
            continue

    print("\nИгра начинается!")
    result = can_jump(nums)

    if result:
        print("\nТы выиграл!")
    else:
        print("\nТы проиграл! Попробуй еще раз.")


if __name__ == "__main__":
    start_game()
